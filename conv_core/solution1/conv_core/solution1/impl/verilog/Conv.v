// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_Conv,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3872,HLS_SYN_LUT=4726,HLS_VERSION=2021_1}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_state13 = 59'd4096;
parameter    ap_ST_fsm_state14 = 59'd8192;
parameter    ap_ST_fsm_state15 = 59'd16384;
parameter    ap_ST_fsm_state16 = 59'd32768;
parameter    ap_ST_fsm_state17 = 59'd65536;
parameter    ap_ST_fsm_state18 = 59'd131072;
parameter    ap_ST_fsm_state19 = 59'd262144;
parameter    ap_ST_fsm_state20 = 59'd524288;
parameter    ap_ST_fsm_state21 = 59'd1048576;
parameter    ap_ST_fsm_state22 = 59'd2097152;
parameter    ap_ST_fsm_state23 = 59'd4194304;
parameter    ap_ST_fsm_state24 = 59'd8388608;
parameter    ap_ST_fsm_state25 = 59'd16777216;
parameter    ap_ST_fsm_state26 = 59'd33554432;
parameter    ap_ST_fsm_state27 = 59'd67108864;
parameter    ap_ST_fsm_state28 = 59'd134217728;
parameter    ap_ST_fsm_state29 = 59'd268435456;
parameter    ap_ST_fsm_state30 = 59'd536870912;
parameter    ap_ST_fsm_state31 = 59'd1073741824;
parameter    ap_ST_fsm_state32 = 59'd2147483648;
parameter    ap_ST_fsm_state33 = 59'd4294967296;
parameter    ap_ST_fsm_state34 = 59'd8589934592;
parameter    ap_ST_fsm_state35 = 59'd17179869184;
parameter    ap_ST_fsm_state36 = 59'd34359738368;
parameter    ap_ST_fsm_state37 = 59'd68719476736;
parameter    ap_ST_fsm_state38 = 59'd137438953472;
parameter    ap_ST_fsm_state39 = 59'd274877906944;
parameter    ap_ST_fsm_state40 = 59'd549755813888;
parameter    ap_ST_fsm_state41 = 59'd1099511627776;
parameter    ap_ST_fsm_state42 = 59'd2199023255552;
parameter    ap_ST_fsm_state43 = 59'd4398046511104;
parameter    ap_ST_fsm_state44 = 59'd8796093022208;
parameter    ap_ST_fsm_state45 = 59'd17592186044416;
parameter    ap_ST_fsm_state46 = 59'd35184372088832;
parameter    ap_ST_fsm_state47 = 59'd70368744177664;
parameter    ap_ST_fsm_state48 = 59'd140737488355328;
parameter    ap_ST_fsm_state49 = 59'd281474976710656;
parameter    ap_ST_fsm_state50 = 59'd562949953421312;
parameter    ap_ST_fsm_state51 = 59'd1125899906842624;
parameter    ap_ST_fsm_state52 = 59'd2251799813685248;
parameter    ap_ST_fsm_state53 = 59'd4503599627370496;
parameter    ap_ST_fsm_state54 = 59'd9007199254740992;
parameter    ap_ST_fsm_state55 = 59'd18014398509481984;
parameter    ap_ST_fsm_state56 = 59'd36028797018963968;
parameter    ap_ST_fsm_state57 = 59'd72057594037927936;
parameter    ap_ST_fsm_state58 = 59'd144115188075855872;
parameter    ap_ST_fsm_state59 = 59'd288230376151711744;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] CHin;
wire   [15:0] Hin;
wire   [15:0] Win;
wire   [15:0] CHout;
wire   [7:0] Kx;
wire   [7:0] Ky;
wire   [7:0] Sx;
wire   [7:0] Sy;
wire   [0:0] mode;
wire   [0:0] relu_en;
wire   [63:0] feature_in;
wire   [63:0] W;
wire   [63:0] bias;
wire   [63:0] feature_out;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state52;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state54;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state59;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state30;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state37;
reg   [63:0] feature_out_read_reg_1442;
reg   [63:0] bias_read_reg_1447;
reg   [63:0] W_read_reg_1453;
reg   [63:0] feature_in_read_reg_1458;
reg   [0:0] relu_en_read_reg_1463;
reg   [7:0] Sy_read_reg_1468;
reg   [7:0] Sx_read_reg_1473;
reg   [7:0] Ky_read_reg_1478;
reg   [7:0] Kx_read_reg_1483;
reg   [15:0] CHout_read_reg_1489;
reg   [15:0] Win_read_reg_1496;
reg   [15:0] CHin_read_reg_1501;
wire   [7:0] pad_x_V_1_fu_528_p3;
reg   [7:0] pad_x_V_1_reg_1515;
wire   [7:0] pad_y_V_1_fu_536_p3;
reg   [7:0] pad_y_V_1_reg_1520;
wire   [16:0] zext_ln1543_3_fu_556_p1;
reg   [16:0] zext_ln1543_3_reg_1525;
wire   [16:0] zext_ln1543_8_fu_602_p1;
reg   [16:0] zext_ln1543_8_reg_1540;
wire   [15:0] Wout_V_fu_665_p2;
reg   [15:0] Wout_V_reg_1556;
wire    ap_CS_fsm_state22;
wire   [31:0] Wout_V_cast_fu_681_p1;
reg   [31:0] Wout_V_cast_reg_1562;
wire   [15:0] rhs_8_fu_689_p1;
reg   [15:0] rhs_8_reg_1574;
wire    ap_CS_fsm_state25;
wire   [15:0] conv_i9_i381_fu_692_p1;
reg   [15:0] conv_i9_i381_reg_1580;
wire   [15:0] zext_ln1525_fu_695_p1;
reg   [15:0] zext_ln1525_reg_1585;
wire   [15:0] zext_ln1525_1_fu_698_p1;
reg   [15:0] zext_ln1525_1_reg_1590;
wire   [31:0] conv_i_i282_fu_701_p1;
reg   [31:0] conv_i_i282_reg_1595;
wire   [47:0] rhs_2_fu_704_p1;
reg   [47:0] rhs_2_reg_1602;
wire   [15:0] Kx_cast7_fu_707_p1;
reg   [15:0] Kx_cast7_reg_1607;
wire   [47:0] CHout_cast_fu_710_p1;
reg   [47:0] CHout_cast_reg_1612;
wire   [23:0] CHin_cast10_fu_713_p1;
reg   [23:0] CHin_cast10_reg_1619;
wire   [31:0] CHout_cast6_fu_716_p1;
reg   [31:0] CHout_cast6_reg_1624;
wire   [0:0] cmp_i_i2831078_fu_719_p2;
reg   [0:0] cmp_i_i2831078_reg_1629;
wire   [15:0] bound_fu_727_p2;
reg   [15:0] bound_reg_1633;
wire   [31:0] grp_fu_1339_p2;
reg   [31:0] bound10_reg_1638;
wire   [47:0] bound19_fu_736_p2;
reg   [47:0] bound19_reg_1643;
wire   [0:0] icmp_ln1057_fu_742_p2;
reg   [0:0] icmp_ln1057_reg_1648;
wire    ap_CS_fsm_state26;
wire   [47:0] add_ln573_fu_799_p2;
reg   [47:0] add_ln573_reg_1664;
wire    ap_CS_fsm_state29;
wire   [47:0] add_ln1057_1_fu_810_p2;
reg   [47:0] add_ln1057_1_reg_1672;
wire   [0:0] icmp_ln1057_2_fu_819_p2;
reg   [0:0] icmp_ln1057_2_reg_1677;
wire   [0:0] icmp_ln1057_1_fu_805_p2;
wire   [15:0] add_ln43_fu_824_p2;
reg   [15:0] add_ln43_reg_1686;
reg   [63:0] gmem_addr_reg_1692;
wire   [0:0] select_ln1057_5_fu_880_p3;
reg   [0:0] select_ln1057_5_reg_1698;
wire  signed [15:0] select_ln45_fu_893_p3;
reg  signed [15:0] select_ln45_reg_1705;
(* use_dsp48 = "no" *) wire   [15:0] i_4_fu_907_p2;
wire   [15:0] select_ln1057_6_fu_917_p3;
reg   [15:0] select_ln1057_6_reg_1722;
wire   [15:0] grp_fu_1352_p3;
reg  signed [15:0] sub_ln1525_reg_1727;
wire    ap_CS_fsm_state32;
wire   [15:0] select_ln1057_1_fu_924_p3;
reg   [15:0] select_ln1057_1_reg_1732;
wire    ap_CS_fsm_state33;
wire   [15:0] sub_ln45_fu_954_p2;
reg   [15:0] sub_ln45_reg_1738;
wire   [47:0] select_ln45_2_fu_973_p3;
reg   [47:0] select_ln45_2_reg_1744;
wire   [31:0] bitcast_ln1057_fu_980_p1;
reg   [31:0] bitcast_ln1057_reg_1749;
wire   [15:0] add_ln1057_2_fu_1007_p2;
reg   [15:0] add_ln1057_2_reg_1757;
wire    ap_CS_fsm_state38;
wire   [7:0] select_ln49_fu_1018_p3;
reg   [7:0] select_ln49_reg_1762;
wire   [0:0] icmp_ln1057_4_fu_1002_p2;
wire   [7:0] select_ln49_2_fu_1057_p3;
reg   [7:0] select_ln49_2_reg_1773;
wire   [15:0] mul_ln49_2_fu_1069_p2;
reg   [15:0] mul_ln49_2_reg_1778;
(* use_dsp48 = "no" *) wire  signed [15:0] w_V_fu_1091_p2;
reg  signed [15:0] w_V_reg_1783;
wire   [0:0] and_ln56_1_fu_1131_p2;
reg   [0:0] and_ln56_1_reg_1788;
wire    ap_CS_fsm_state39;
wire  signed [47:0] mul_ln49_1_fu_1189_p2;
wire    ap_CS_fsm_state41;
wire  signed [31:0] grp_fu_1388_p2;
reg   [31:0] mul_ln49_3_reg_1812;
wire    ap_CS_fsm_state42;
wire   [63:0] add_ln225_2_fu_1205_p2;
reg   [63:0] add_ln225_2_reg_1817;
reg   [61:0] trunc_ln4_reg_1827;
wire    ap_CS_fsm_state45;
wire   [47:0] tmp9_fu_1235_p2;
reg   [47:0] tmp9_reg_1832;
wire   [7:0] jj_fu_1244_p2;
reg   [7:0] jj_reg_1840;
wire    ap_CS_fsm_state47;
wire   [31:0] grp_fu_399_p2;
reg   [31:0] sum_reg_1845;
wire    ap_CS_fsm_state51;
reg   [63:0] gmem_addr_1_reg_1851;
wire   [31:0] select_ln76_fu_1331_p3;
reg   [31:0] select_ln76_reg_1857;
wire    ap_CS_fsm_state53;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_ap_start;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_ap_done;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_ap_idle;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_ap_ready;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWVALID;
wire   [63:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWADDR;
wire   [0:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWID;
wire   [31:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWLEN;
wire   [2:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWSIZE;
wire   [1:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWBURST;
wire   [1:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWLOCK;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWCACHE;
wire   [2:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWPROT;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWQOS;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWREGION;
wire   [0:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWUSER;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WVALID;
wire   [31:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WDATA;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WSTRB;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WLAST;
wire   [0:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WID;
wire   [0:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WUSER;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARVALID;
wire   [63:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARADDR;
wire   [0:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARID;
wire   [31:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARLEN;
wire   [2:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARSIZE;
wire   [1:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARBURST;
wire   [1:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARLOCK;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARCACHE;
wire   [2:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARPROT;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARQOS;
wire   [3:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARREGION;
wire   [0:0] grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARUSER;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_RREADY;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_BREADY;
wire   [31:0] grp_Conv_Pipeline_Input_Channel_fu_384_sum_2_out;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_sum_2_out_ap_vld;
wire   [31:0] grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_din0;
wire   [31:0] grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_din1;
wire   [1:0] grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_opcode;
wire    grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_ce;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [15:0] indvar_flatten_reg_324;
wire    ap_CS_fsm_state48;
reg   [7:0] ii_reg_335;
reg   [7:0] jj_1_reg_346;
reg   [31:0] sum_1_reg_357;
reg   [31:0] sum_3_reg_369;
reg    grp_Conv_Pipeline_Input_Channel_fu_384_ap_start_reg;
wire    ap_CS_fsm_state46;
wire  signed [63:0] sext_ln1057_fu_865_p1;
wire  signed [63:0] sext_ln76_fu_1275_p1;
reg   [15:0] lhs_V_1_fu_188;
wire   [15:0] j_fu_1140_p2;
reg   [15:0] i_fu_192;
reg   [31:0] indvar_flatten13_fu_196;
wire   [31:0] select_ln1057_7_fu_1151_p3;
reg   [15:0] cout_fu_200;
reg   [47:0] indvar_flatten52_fu_204;
reg   [31:0] grp_fu_399_p0;
reg   [31:0] grp_fu_399_p1;
wire   [8:0] zext_ln1543_fu_412_p1;
wire   [8:0] add_ln1543_fu_416_p2;
wire   [8:0] sub_ln1543_fu_430_p2;
wire   [7:0] trunc_ln1543_1_fu_436_p4;
wire   [0:0] tmp_4_fu_422_p3;
wire   [7:0] sub_ln1543_1_fu_446_p2;
wire   [7:0] trunc_ln1543_2_fu_452_p4;
wire   [8:0] zext_ln1543_1_fu_470_p1;
wire   [8:0] add_ln1543_1_fu_474_p2;
wire   [8:0] sub_ln1543_2_fu_488_p2;
wire   [7:0] trunc_ln1543_4_fu_494_p4;
wire   [0:0] tmp_5_fu_480_p3;
wire   [7:0] sub_ln1543_3_fu_504_p2;
wire   [7:0] trunc_ln1543_5_fu_510_p4;
wire   [7:0] pad_x_V_fu_462_p3;
wire   [7:0] pad_y_V_fu_520_p3;
wire   [8:0] shl_ln_fu_544_p3;
wire   [16:0] zext_ln1543_2_fu_552_p1;
wire   [16:0] add_ln1543_2_fu_560_p2;
wire   [17:0] zext_ln1543_4_fu_566_p1;
wire   [17:0] zext_ln1543_5_fu_570_p1;
wire   [17:0] grp_fu_584_p0;
wire   [8:0] grp_fu_584_p1;
wire   [8:0] shl_ln1543_1_fu_590_p3;
wire   [16:0] zext_ln1543_7_fu_598_p1;
wire   [16:0] add_ln1543_3_fu_606_p2;
wire   [17:0] zext_ln1543_9_fu_612_p1;
wire   [17:0] zext_ln1543_10_fu_616_p1;
wire   [17:0] grp_fu_630_p0;
wire   [8:0] grp_fu_630_p1;
wire   [15:0] grp_fu_584_p2;
wire   [15:0] trunc_ln223_fu_661_p1;
wire   [15:0] grp_fu_630_p2;
wire   [15:0] trunc_ln223_1_fu_671_p1;
wire   [15:0] Hout_V_fu_675_p2;
wire   [7:0] bound_fu_727_p0;
wire   [7:0] bound_fu_727_p1;
wire   [15:0] bound19_fu_736_p0;
wire   [31:0] bound19_fu_736_p1;
wire  signed [15:0] i_cast_fu_750_p0;
wire   [17:0] tmp_3_fu_764_p3;
wire   [63:0] p_cast18_fu_772_p1;
wire   [63:0] empty_fu_776_p2;
wire   [31:0] grp_fu_1346_p2;
wire   [31:0] mul_i_fu_794_p0;
wire   [15:0] mul_i_fu_794_p1;
wire   [47:0] mul_i_fu_794_p2;
wire   [47:0] zext_ln1057_fu_760_p1;
wire   [17:0] p_mid_fu_830_p3;
wire   [63:0] p_cast18_mid1_fu_838_p1;
wire   [63:0] p_mid130_fu_842_p2;
wire   [61:0] p_cast_mid1_fu_847_p4;
wire   [61:0] p_cast_fu_781_p4;
wire   [61:0] select_ln1057_2_fu_857_p3;
wire   [0:0] icmp_ln1057_3_fu_875_p2;
wire   [0:0] or_ln45_fu_887_p2;
wire  signed [15:0] select_ln1057_fu_901_p2;
wire   [15:0] select_ln1057_fu_901_p3;
wire  signed [15:0] grp_fu_1358_p2;
wire   [47:0] zext_ln1057_1_fu_929_p1;
wire  signed [15:0] grp_fu_1363_p2;
wire   [15:0] select_ln1057_3_fu_936_p3;
wire   [15:0] select_ln45_1_fu_948_p3;
wire   [31:0] grp_fu_1369_p2;
wire   [31:0] mul_i_mid1_fu_962_p0;
wire   [15:0] mul_i_mid1_fu_962_p1;
wire   [47:0] mul_i_mid1_fu_962_p2;
wire   [47:0] select_ln1057_2_cast_fu_932_p1;
wire   [47:0] add_ln573_2_fu_967_p2;
wire   [47:0] select_ln1057_4_fu_942_p3;
wire   [15:0] ii_cast19_fu_984_p1;
wire  signed [15:0] h_V_fu_988_p2;
wire  signed [16:0] h_V_cast_fu_993_p1;
wire   [0:0] icmp_ln1057_6_fu_1013_p2;
wire   [7:0] add_ln50_fu_1026_p2;
wire   [15:0] ii_cast19_mid1_fu_1032_p1;
wire  signed [15:0] h_V_mid1_fu_1036_p2;
wire  signed [15:0] select_ln49_1_fu_1041_p3;
wire   [7:0] mul_ln49_2_fu_1069_p0;
wire   [7:0] mul_ln49_2_fu_1069_p1;
wire  signed [16:0] h_V_cast_mid1_fu_1049_p1;
wire   [0:0] icmp_ln56_1_fu_1074_p2;
wire   [0:0] icmp_ln56_fu_997_p2;
wire   [15:0] zext_ln225_fu_1087_p1;
wire   [15:0] or_ln56_fu_1100_p2;
wire   [0:0] tmp_6_fu_1106_p3;
wire  signed [16:0] sext_ln225_1_fu_1096_p1;
wire   [0:0] icmp_ln1057_5_fu_1120_p2;
wire   [0:0] xor_ln56_fu_1114_p2;
wire   [0:0] and_ln56_fu_1125_p2;
wire   [0:0] select_ln49_3_fu_1079_p3;
wire   [31:0] add_ln1057_fu_1145_p2;
wire  signed [31:0] grp_fu_1375_p2;
wire   [15:0] mul_ln49_1_fu_1189_p1;
wire  signed [47:0] grp_fu_1393_p3;
wire   [49:0] shl_ln2_fu_1194_p3;
wire  signed [63:0] sext_ln225_3_fu_1201_p1;
wire   [23:0] grp_fu_1401_p2;
wire   [31:0] zext_ln49_fu_1213_p1;
(* use_dsp48 = "no" *) wire   [31:0] tmp_fu_1226_p2;
wire   [31:0] tmp9_fu_1235_p0;
wire   [15:0] tmp9_fu_1235_p1;
wire   [47:0] grp_fu_1381_p3;
wire   [49:0] shl_ln1_fu_1249_p3;
wire   [63:0] zext_ln76_1_fu_1256_p1;
wire   [63:0] add_ln76_fu_1260_p2;
wire   [61:0] trunc_ln3_fu_1265_p4;
wire   [31:0] bitcast_ln73_fu_1285_p1;
wire   [7:0] tmp_1_fu_1288_p4;
wire   [22:0] trunc_ln73_fu_1298_p1;
wire   [0:0] icmp_ln73_1_fu_1308_p2;
wire   [0:0] icmp_ln73_fu_1302_p2;
wire   [0:0] or_ln73_fu_1314_p2;
wire   [0:0] grp_fu_404_p2;
wire   [0:0] and_ln73_1_fu_1320_p2;
wire   [0:0] and_ln73_fu_1326_p2;
wire   [15:0] grp_fu_1339_p0;
wire   [15:0] grp_fu_1339_p1;
wire   [15:0] grp_fu_1346_p0;
wire   [15:0] grp_fu_1346_p1;
wire   [15:0] grp_fu_1352_p0;
wire   [7:0] grp_fu_1352_p1;
wire   [7:0] grp_fu_1352_p2;
wire    ap_CS_fsm_state31;
wire   [7:0] grp_fu_1358_p1;
wire   [7:0] grp_fu_1363_p1;
wire   [15:0] grp_fu_1369_p0;
wire   [15:0] grp_fu_1369_p1;
wire   [15:0] grp_fu_1375_p1;
wire   [15:0] grp_fu_1381_p0;
wire   [15:0] grp_fu_1381_p1;
wire    ap_CS_fsm_state50;
wire   [15:0] grp_fu_1388_p0;
wire   [15:0] grp_fu_1388_p1;
wire   [15:0] grp_fu_1393_p1;
wire   [7:0] grp_fu_1401_p0;
wire   [15:0] grp_fu_1401_p1;
reg    grp_fu_399_ce;
reg    grp_fu_404_ce;
reg    grp_fu_584_ap_start;
wire    grp_fu_584_ap_done;
reg    grp_fu_630_ap_start;
wire    grp_fu_630_ap_done;
reg    grp_fu_1352_ce;
reg    grp_fu_1358_ce;
reg    grp_fu_1363_ce;
reg    grp_fu_1369_ce;
reg   [58:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
reg    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
reg    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
reg    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
reg    ap_ST_fsm_state59_blk;
wire   [47:0] bound19_fu_736_p00;
wire   [47:0] bound19_fu_736_p10;
wire   [15:0] bound_fu_727_p00;
wire   [15:0] bound_fu_727_p10;
wire   [31:0] grp_fu_1339_p00;
wire   [31:0] grp_fu_1339_p10;
wire   [31:0] grp_fu_1346_p00;
wire   [31:0] grp_fu_1369_p00;
wire   [31:0] grp_fu_1381_p00;
wire   [31:0] grp_fu_1388_p00;
wire   [23:0] grp_fu_1401_p00;
wire   [17:0] grp_fu_584_p10;
wire   [17:0] grp_fu_630_p10;
wire   [47:0] mul_i_fu_794_p00;
wire   [47:0] mul_i_mid1_fu_962_p00;
wire   [15:0] mul_ln49_2_fu_1069_p00;
wire   [47:0] tmp9_fu_1235_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'd1;
#0 grp_Conv_Pipeline_Input_Channel_fu_384_ap_start_reg = 1'b0;
end

Conv_Conv_Pipeline_Input_Channel grp_Conv_Pipeline_Input_Channel_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Conv_Pipeline_Input_Channel_fu_384_ap_start),
    .ap_done(grp_Conv_Pipeline_Input_Channel_fu_384_ap_done),
    .ap_idle(grp_Conv_Pipeline_Input_Channel_fu_384_ap_idle),
    .ap_ready(grp_Conv_Pipeline_Input_Channel_fu_384_ap_ready),
    .m_axi_gmem_AWVALID(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .sum_1(sum_1_reg_357),
    .CHin(CHin_read_reg_1501),
    .trunc_ln59_cast(trunc_ln4_reg_1827),
    .CHout_cast6(CHout_read_reg_1489),
    .zext_ln1057_1(select_ln1057_1_reg_1732),
    .tmp9(tmp9_reg_1832),
    .W(W_read_reg_1453),
    .sum_2_out(grp_Conv_Pipeline_Input_Channel_fu_384_sum_2_out),
    .sum_2_out_ap_vld(grp_Conv_Pipeline_Input_Channel_fu_384_sum_2_out_ap_vld),
    .grp_fu_399_p_din0(grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_din0),
    .grp_fu_399_p_din1(grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_din1),
    .grp_fu_399_p_opcode(grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_opcode),
    .grp_fu_399_p_dout0(grp_fu_399_p2),
    .grp_fu_399_p_ce(grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_ce)
);

Conv_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .CHin(CHin),
    .Hin(Hin),
    .Win(Win),
    .CHout(CHout),
    .Kx(Kx),
    .Ky(Ky),
    .Sx(Sx),
    .Sy(Sy),
    .mode(mode),
    .relu_en(relu_en),
    .feature_in(feature_in),
    .W(W),
    .bias(bias),
    .feature_out(feature_out),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Conv_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(gmem_ARID),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(gmem_ARSIZE),
    .I_ARLOCK(gmem_ARLOCK),
    .I_ARCACHE(gmem_ARCACHE),
    .I_ARQOS(gmem_ARQOS),
    .I_ARPROT(gmem_ARPROT),
    .I_ARUSER(gmem_ARUSER),
    .I_ARBURST(gmem_ARBURST),
    .I_ARREGION(gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_1_reg_1851),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(select_ln76_reg_1857),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Conv_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_399_p0),
    .din1(grp_fu_399_p1),
    .ce(grp_fu_399_ce),
    .dout(grp_fu_399_p2)
);

Conv_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sum_reg_1845),
    .din1(32'd0),
    .ce(grp_fu_404_ce),
    .opcode(5'd4),
    .dout(grp_fu_404_p2)
);

Conv_sdiv_18ns_9ns_16_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
sdiv_18ns_9ns_16_22_seq_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_584_ap_start),
    .done(grp_fu_584_ap_done),
    .din0(grp_fu_584_p0),
    .din1(grp_fu_584_p1),
    .ce(1'b1),
    .dout(grp_fu_584_p2)
);

Conv_sdiv_18ns_9ns_16_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
sdiv_18ns_9ns_16_22_seq_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_630_ap_start),
    .done(grp_fu_630_ap_done),
    .din0(grp_fu_630_p0),
    .din1(grp_fu_630_p1),
    .ce(1'b1),
    .dout(grp_fu_630_p2)
);

Conv_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U18(
    .din0(bound_fu_727_p0),
    .din1(bound_fu_727_p1),
    .dout(bound_fu_727_p2)
);

Conv_mul_16ns_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_16ns_32ns_48_1_1_U19(
    .din0(bound19_fu_736_p0),
    .din1(bound19_fu_736_p1),
    .dout(bound19_fu_736_p2)
);

Conv_mul_32ns_16ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_1_1_U20(
    .din0(mul_i_fu_794_p0),
    .din1(mul_i_fu_794_p1),
    .dout(mul_i_fu_794_p2)
);

Conv_mul_32ns_16ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_1_1_U21(
    .din0(mul_i_mid1_fu_962_p0),
    .din1(mul_i_mid1_fu_962_p1),
    .dout(mul_i_mid1_fu_962_p2)
);

Conv_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U22(
    .din0(mul_ln49_2_fu_1069_p0),
    .din1(mul_ln49_2_fu_1069_p1),
    .dout(mul_ln49_2_fu_1069_p2)
);

Conv_mul_32s_16ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32s_16ns_48_1_1_U23(
    .din0(grp_fu_1375_p2),
    .din1(mul_ln49_1_fu_1189_p1),
    .dout(mul_ln49_1_fu_1189_p2)
);

Conv_mul_32ns_16ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
mul_32ns_16ns_48_1_1_U24(
    .din0(tmp9_fu_1235_p0),
    .din1(tmp9_fu_1235_p1),
    .dout(tmp9_fu_1235_p2)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1339_p0),
    .din1(grp_fu_1339_p1),
    .ce(1'b1),
    .dout(grp_fu_1339_p2)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1346_p0),
    .din1(grp_fu_1346_p1),
    .ce(1'b1),
    .dout(grp_fu_1346_p2)
);

Conv_mac_mul_sub_16ns_8ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mac_mul_sub_16ns_8ns_8ns_16_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1352_p0),
    .din1(grp_fu_1352_p1),
    .din2(grp_fu_1352_p2),
    .ce(grp_fu_1352_ce),
    .dout(grp_fu_1352_p3)
);

Conv_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_fu_192),
    .din1(grp_fu_1358_p1),
    .ce(grp_fu_1358_ce),
    .dout(grp_fu_1358_p2)
);

Conv_mul_mul_16ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_8ns_16_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_4_fu_907_p2),
    .din1(grp_fu_1363_p1),
    .ce(grp_fu_1363_ce),
    .dout(grp_fu_1363_p2)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1369_p0),
    .din1(grp_fu_1369_p1),
    .ce(grp_fu_1369_ce),
    .dout(grp_fu_1369_p2)
);

Conv_mul_mul_16s_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16ns_32_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(select_ln49_1_fu_1041_p3),
    .din1(grp_fu_1375_p1),
    .ce(1'b1),
    .dout(grp_fu_1375_p2)
);

Conv_mac_muladd_16ns_16ns_48ns_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
mac_muladd_16ns_16ns_48ns_48_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1381_p0),
    .din1(grp_fu_1381_p1),
    .din2(select_ln45_2_reg_1744),
    .ce(1'b1),
    .dout(grp_fu_1381_p3)
);

Conv_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1388_p0),
    .din1(grp_fu_1388_p1),
    .ce(1'b1),
    .dout(grp_fu_1388_p2)
);

Conv_mac_muladd_16s_16ns_48s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
mac_muladd_16s_16ns_48s_48_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(w_V_reg_1783),
    .din1(grp_fu_1393_p1),
    .din2(mul_ln49_1_fu_1189_p2),
    .ce(1'b1),
    .dout(grp_fu_1393_p3)
);

Conv_mul_mul_8ns_16ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_mul_8ns_16ns_24_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1401_p0),
    .din1(grp_fu_1401_p1),
    .ce(1'b1),
    .dout(grp_fu_1401_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Conv_Pipeline_Input_Channel_fu_384_ap_start_reg <= 1'b0;
    end else begin
        if (((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
            grp_Conv_Pipeline_Input_Channel_fu_384_ap_start_reg <= 1'b1;
        end else if ((grp_Conv_Pipeline_Input_Channel_fu_384_ap_ready == 1'b1)) begin
            grp_Conv_Pipeline_Input_Channel_fu_384_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cout_fu_200 <= 16'd0;
    end else if (((icmp_ln1057_4_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        cout_fu_200 <= select_ln1057_1_reg_1732;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_192 <= 16'd0;
    end else if (((icmp_ln1057_4_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        i_fu_192 <= select_ln1057_6_reg_1722;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        ii_reg_335 <= select_ln49_2_reg_1773;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        ii_reg_335 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_fu_196 <= 32'd0;
    end else if (((icmp_ln1057_4_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        indvar_flatten13_fu_196 <= select_ln1057_7_fu_1151_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten52_fu_204 <= 48'd0;
    end else if (((icmp_ln1057_4_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        indvar_flatten52_fu_204 <= add_ln1057_1_reg_1672;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        indvar_flatten_reg_324 <= add_ln1057_2_reg_1757;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        indvar_flatten_reg_324 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        jj_1_reg_346 <= jj_reg_1840;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        jj_1_reg_346 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lhs_V_1_fu_188 <= 16'd0;
    end else if (((icmp_ln1057_4_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        lhs_V_1_fu_188 <= j_fu_1140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        sum_1_reg_357 <= sum_3_reg_369;
    end else if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        sum_1_reg_357 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln56_1_reg_1788) & (1'b1 == ap_CS_fsm_state42)) | ((cmp_i_i2831078_reg_1629 == 1'd1) & (1'b1 == ap_CS_fsm_state45)))) begin
        sum_3_reg_369 <= sum_1_reg_357;
    end else if (((1'd1 == and_ln56_1_reg_1788) & (cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        sum_3_reg_369 <= grp_Conv_Pipeline_Input_Channel_fu_384_sum_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        CHin_cast10_reg_1619[15 : 0] <= CHin_cast10_fu_713_p1[15 : 0];
        CHout_cast6_reg_1624[15 : 0] <= CHout_cast6_fu_716_p1[15 : 0];
        CHout_cast_reg_1612[15 : 0] <= CHout_cast_fu_710_p1[15 : 0];
        Kx_cast7_reg_1607[7 : 0] <= Kx_cast7_fu_707_p1[7 : 0];
        bound10_reg_1638 <= grp_fu_1339_p2;
        bound19_reg_1643 <= bound19_fu_736_p2;
        bound_reg_1633 <= bound_fu_727_p2;
        cmp_i_i2831078_reg_1629 <= cmp_i_i2831078_fu_719_p2;
        conv_i9_i381_reg_1580[7 : 0] <= conv_i9_i381_fu_692_p1[7 : 0];
        conv_i_i282_reg_1595[15 : 0] <= conv_i_i282_fu_701_p1[15 : 0];
        icmp_ln1057_reg_1648 <= icmp_ln1057_fu_742_p2;
        rhs_2_reg_1602[15 : 0] <= rhs_2_fu_704_p1[15 : 0];
        rhs_8_reg_1574[7 : 0] <= rhs_8_fu_689_p1[7 : 0];
        zext_ln1525_1_reg_1590[7 : 0] <= zext_ln1525_1_fu_698_p1[7 : 0];
        zext_ln1525_reg_1585[7 : 0] <= zext_ln1525_fu_695_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        CHin_read_reg_1501 <= CHin;
        CHout_read_reg_1489 <= CHout;
        Kx_read_reg_1483 <= Kx;
        Ky_read_reg_1478 <= Ky;
        Sx_read_reg_1473 <= Sx;
        Sy_read_reg_1468 <= Sy;
        W_read_reg_1453 <= W;
        Win_read_reg_1496 <= Win;
        bias_read_reg_1447 <= bias;
        feature_in_read_reg_1458 <= feature_in;
        feature_out_read_reg_1442 <= feature_out;
        pad_x_V_1_reg_1515 <= pad_x_V_1_fu_528_p3;
        pad_y_V_1_reg_1520 <= pad_y_V_1_fu_536_p3;
        relu_en_read_reg_1463 <= relu_en;
        zext_ln1543_3_reg_1525[15 : 0] <= zext_ln1543_3_fu_556_p1[15 : 0];
        zext_ln1543_8_reg_1540[15 : 0] <= zext_ln1543_8_fu_602_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        Wout_V_cast_reg_1562[15 : 0] <= Wout_V_cast_fu_681_p1[15 : 0];
        Wout_V_reg_1556 <= Wout_V_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln1057_1_reg_1672 <= add_ln1057_1_fu_810_p2;
        add_ln573_reg_1664 <= add_ln573_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add_ln1057_2_reg_1757 <= add_ln1057_2_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        add_ln225_2_reg_1817 <= add_ln225_2_fu_1205_p2;
        mul_ln49_3_reg_1812 <= grp_fu_1388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_1_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        add_ln43_reg_1686 <= add_ln43_fu_824_p2;
        gmem_addr_reg_1692 <= sext_ln1057_fu_865_p1;
        icmp_ln1057_2_reg_1677 <= icmp_ln1057_2_fu_819_p2;
        select_ln1057_5_reg_1698 <= select_ln1057_5_fu_880_p3;
        select_ln45_reg_1705 <= select_ln45_fu_893_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_4_fu_1002_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        and_ln56_1_reg_1788 <= and_ln56_1_fu_1131_p2;
        mul_ln49_2_reg_1778 <= mul_ln49_2_fu_1069_p2;
        select_ln49_2_reg_1773 <= select_ln49_2_fu_1057_p3;
        select_ln49_reg_1762 <= select_ln49_fu_1018_p3;
        w_V_reg_1783 <= w_V_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        bitcast_ln1057_reg_1749 <= bitcast_ln1057_fu_980_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        gmem_addr_1_reg_1851 <= sext_ln76_fu_1275_p1;
        sum_reg_1845 <= grp_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        jj_reg_1840 <= jj_fu_1244_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        select_ln1057_1_reg_1732 <= select_ln1057_1_fu_924_p3;
        select_ln45_2_reg_1744 <= select_ln45_2_fu_973_p3;
        sub_ln45_reg_1738 <= sub_ln45_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        select_ln1057_6_reg_1722 <= select_ln1057_6_fu_917_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        select_ln76_reg_1857 <= select_ln76_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        sub_ln1525_reg_1727 <= grp_fu_1352_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        tmp9_reg_1832 <= tmp9_fu_1235_p2;
        trunc_ln4_reg_1827 <= {{add_ln225_2_reg_1817[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

always @ (*) begin
    if ((grp_Conv_Pipeline_Input_Channel_fu_384_ap_done == 1'b0)) begin
        ap_ST_fsm_state46_blk = 1'b1;
    end else begin
        ap_ST_fsm_state46_blk = 1'b0;
    end
end

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

always @ (*) begin
    if ((gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state52_blk = 1'b1;
    end else begin
        ap_ST_fsm_state52_blk = 1'b0;
    end
end

assign ap_ST_fsm_state53_blk = 1'b0;

always @ (*) begin
    if ((gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state54_blk = 1'b1;
    end else begin
        ap_ST_fsm_state54_blk = 1'b0;
    end
end

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

always @ (*) begin
    if ((gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state59_blk = 1'b1;
    end else begin
        ap_ST_fsm_state59_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1057_1_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_1_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        gmem_ARADDR = gmem_addr_reg_1692;
    end else if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARADDR = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARBURST = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARBURST;
    end else begin
        gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARCACHE = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARCACHE;
    end else begin
        gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARID = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARID;
    end else begin
        gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        gmem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARLEN = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARLOCK = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARLOCK;
    end else begin
        gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARPROT = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARPROT;
    end else begin
        gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARQOS = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARQOS;
    end else begin
        gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARREGION = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARREGION;
    end else begin
        gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARSIZE = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARSIZE;
    end else begin
        gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARUSER = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARUSER;
    end else begin
        gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_ARVALID = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | ((cmp_i_i2831078_reg_1629 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        gmem_RREADY = grp_Conv_Pipeline_Input_Channel_fu_384_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state31) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)))) begin
        grp_fu_1352_ce = 1'b1;
    end else begin
        grp_fu_1352_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)))) begin
        grp_fu_1358_ce = 1'b1;
    end else begin
        grp_fu_1358_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)))) begin
        grp_fu_1363_ce = 1'b1;
    end else begin
        grp_fu_1363_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30)))) begin
        grp_fu_1369_ce = 1'b1;
    end else begin
        grp_fu_1369_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_399_ce = grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_ce;
    end else begin
        grp_fu_399_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_399_p0 = grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_399_p0 = sum_1_reg_357;
    end else begin
        grp_fu_399_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_399_p1 = grp_Conv_Pipeline_Input_Channel_fu_384_grp_fu_399_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_399_p1 = bitcast_ln1057_reg_1749;
    end else begin
        grp_fu_399_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52)))) begin
        grp_fu_404_ce = 1'b1;
    end else begin
        grp_fu_404_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_584_ap_start = 1'b1;
    end else begin
        grp_fu_584_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_630_ap_start = 1'b1;
    end else begin
        grp_fu_630_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln1057_1_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((icmp_ln1057_4_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((1'd0 == and_ln56_1_reg_1788) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((cmp_i_i2831078_reg_1629 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((grp_Conv_Pipeline_Input_Channel_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CHin_cast10_fu_713_p1 = CHin_read_reg_1501;

assign CHout_cast6_fu_716_p1 = CHout_read_reg_1489;

assign CHout_cast_fu_710_p1 = CHout_read_reg_1489;

assign Hout_V_fu_675_p2 = (trunc_ln223_1_fu_671_p1 + 16'd1);

assign Kx_cast7_fu_707_p1 = Kx_read_reg_1483;

assign Wout_V_cast_fu_681_p1 = Wout_V_fu_665_p2;

assign Wout_V_fu_665_p2 = (trunc_ln223_fu_661_p1 + 16'd1);

assign add_ln1057_1_fu_810_p2 = (indvar_flatten52_fu_204 + 48'd1);

assign add_ln1057_2_fu_1007_p2 = (indvar_flatten_reg_324 + 16'd1);

assign add_ln1057_fu_1145_p2 = (indvar_flatten13_fu_196 + 32'd1);

assign add_ln1543_1_fu_474_p2 = ($signed(zext_ln1543_1_fu_470_p1) + $signed(9'd511));

assign add_ln1543_2_fu_560_p2 = (zext_ln1543_2_fu_552_p1 + zext_ln1543_3_fu_556_p1);

assign add_ln1543_3_fu_606_p2 = (zext_ln1543_7_fu_598_p1 + zext_ln1543_8_fu_602_p1);

assign add_ln1543_fu_416_p2 = ($signed(zext_ln1543_fu_412_p1) + $signed(9'd511));

assign add_ln225_2_fu_1205_p2 = ($signed(sext_ln225_3_fu_1201_p1) + $signed(feature_in_read_reg_1458));

assign add_ln43_fu_824_p2 = (cout_fu_200 + 16'd1);

assign add_ln50_fu_1026_p2 = (ii_reg_335 + 8'd1);

assign add_ln573_2_fu_967_p2 = (mul_i_mid1_fu_962_p2 + select_ln1057_2_cast_fu_932_p1);

assign add_ln573_fu_799_p2 = (mul_i_fu_794_p2 + zext_ln1057_fu_760_p1);

assign add_ln76_fu_1260_p2 = (zext_ln76_1_fu_1256_p1 + feature_out_read_reg_1442);

assign and_ln56_1_fu_1131_p2 = (select_ln49_3_fu_1079_p3 & and_ln56_fu_1125_p2);

assign and_ln56_fu_1125_p2 = (xor_ln56_fu_1114_p2 & icmp_ln1057_5_fu_1120_p2);

assign and_ln73_1_fu_1320_p2 = (or_ln73_fu_1314_p2 & grp_fu_404_p2);

assign and_ln73_fu_1326_p2 = (relu_en_read_reg_1463 & and_ln73_1_fu_1320_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln1057_fu_980_p1 = gmem_RDATA;

assign bitcast_ln73_fu_1285_p1 = sum_reg_1845;

assign bound19_fu_736_p0 = bound19_fu_736_p00;

assign bound19_fu_736_p00 = CHout_read_reg_1489;

assign bound19_fu_736_p1 = bound19_fu_736_p10;

assign bound19_fu_736_p10 = grp_fu_1339_p2;

assign bound_fu_727_p0 = bound_fu_727_p00;

assign bound_fu_727_p00 = Ky_read_reg_1478;

assign bound_fu_727_p1 = bound_fu_727_p10;

assign bound_fu_727_p10 = Kx_read_reg_1483;

assign cmp_i_i2831078_fu_719_p2 = ((CHin_read_reg_1501 == 16'd0) ? 1'b1 : 1'b0);

assign conv_i9_i381_fu_692_p1 = pad_y_V_1_reg_1520;

assign conv_i_i282_fu_701_p1 = CHin_read_reg_1501;

assign empty_fu_776_p2 = (p_cast18_fu_772_p1 + bias_read_reg_1447);

assign grp_Conv_Pipeline_Input_Channel_fu_384_ap_start = grp_Conv_Pipeline_Input_Channel_fu_384_ap_start_reg;

assign grp_fu_1339_p0 = grp_fu_1339_p00;

assign grp_fu_1339_p00 = Hout_V_fu_675_p2;

assign grp_fu_1339_p1 = grp_fu_1339_p10;

assign grp_fu_1339_p10 = Wout_V_fu_665_p2;

assign grp_fu_1346_p0 = grp_fu_1346_p00;

assign grp_fu_1346_p00 = $unsigned(i_cast_fu_750_p0);

assign grp_fu_1346_p1 = Wout_V_cast_reg_1562;

assign grp_fu_1352_p0 = ((or_ln45_fu_887_p2[0:0] == 1'b1) ? 16'd0 : lhs_V_1_fu_188);

assign grp_fu_1352_p1 = zext_ln1525_reg_1585;

assign grp_fu_1352_p2 = zext_ln1525_1_reg_1590;

assign grp_fu_1358_p1 = rhs_8_reg_1574;

assign grp_fu_1363_p1 = rhs_8_reg_1574;

assign grp_fu_1369_p0 = grp_fu_1369_p00;

assign grp_fu_1369_p00 = i_4_fu_907_p2;

assign grp_fu_1369_p1 = Wout_V_cast_reg_1562;

assign grp_fu_1375_p1 = conv_i_i282_reg_1595;

assign grp_fu_1381_p0 = grp_fu_1381_p00;

assign grp_fu_1381_p00 = $unsigned(select_ln45_reg_1705);

assign grp_fu_1381_p1 = CHout_cast6_reg_1624;

assign grp_fu_1388_p0 = grp_fu_1388_p00;

assign grp_fu_1388_p00 = mul_ln49_2_reg_1778;

assign grp_fu_1388_p1 = conv_i_i282_reg_1595;

assign grp_fu_1393_p1 = conv_i_i282_reg_1595;

assign grp_fu_1401_p0 = grp_fu_1401_p00;

assign grp_fu_1401_p00 = select_ln49_reg_1762;

assign grp_fu_1401_p1 = CHin_cast10_reg_1619;

assign grp_fu_584_p0 = (zext_ln1543_4_fu_566_p1 - zext_ln1543_5_fu_570_p1);

assign grp_fu_584_p1 = grp_fu_584_p10;

assign grp_fu_584_p10 = Sx;

assign grp_fu_630_p0 = (zext_ln1543_9_fu_612_p1 - zext_ln1543_10_fu_616_p1);

assign grp_fu_630_p1 = grp_fu_630_p10;

assign grp_fu_630_p10 = Sy;

assign h_V_cast_fu_993_p1 = h_V_fu_988_p2;

assign h_V_cast_mid1_fu_1049_p1 = h_V_mid1_fu_1036_p2;

assign h_V_fu_988_p2 = (sub_ln45_reg_1738 + ii_cast19_fu_984_p1);

assign h_V_mid1_fu_1036_p2 = (sub_ln45_reg_1738 + ii_cast19_mid1_fu_1032_p1);

assign i_4_fu_907_p2 = (select_ln1057_fu_901_p3 + 16'd1);

assign i_cast_fu_750_p0 = i_fu_192;

assign icmp_ln1057_1_fu_805_p2 = ((indvar_flatten52_fu_204 == bound19_reg_1643) ? 1'b1 : 1'b0);

assign icmp_ln1057_2_fu_819_p2 = ((indvar_flatten13_fu_196 == bound10_reg_1638) ? 1'b1 : 1'b0);

assign icmp_ln1057_3_fu_875_p2 = ((lhs_V_1_fu_188 == Wout_V_reg_1556) ? 1'b1 : 1'b0);

assign icmp_ln1057_4_fu_1002_p2 = ((indvar_flatten_reg_324 == bound_reg_1633) ? 1'b1 : 1'b0);

assign icmp_ln1057_5_fu_1120_p2 = (($signed(sext_ln225_1_fu_1096_p1) < $signed(zext_ln1543_3_reg_1525)) ? 1'b1 : 1'b0);

assign icmp_ln1057_6_fu_1013_p2 = ((jj_1_reg_346 == Kx_read_reg_1483) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_742_p2 = ((Wout_V_reg_1556 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln56_1_fu_1074_p2 = (($signed(h_V_cast_mid1_fu_1049_p1) < $signed(zext_ln1543_8_reg_1540)) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_997_p2 = (($signed(h_V_cast_fu_993_p1) < $signed(zext_ln1543_8_reg_1540)) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_1308_p2 = ((trunc_ln73_fu_1298_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1302_p2 = ((tmp_1_fu_1288_p4 != 8'd255) ? 1'b1 : 1'b0);

assign ii_cast19_fu_984_p1 = ii_reg_335;

assign ii_cast19_mid1_fu_1032_p1 = add_ln50_fu_1026_p2;

assign j_fu_1140_p2 = ($signed(select_ln45_reg_1705) + $signed(16'd1));

assign jj_fu_1244_p2 = (select_ln49_reg_1762 + 8'd1);

assign mul_i_fu_794_p0 = mul_i_fu_794_p00;

assign mul_i_fu_794_p00 = grp_fu_1346_p2;

assign mul_i_fu_794_p1 = CHout_cast_reg_1612;

assign mul_i_mid1_fu_962_p0 = mul_i_mid1_fu_962_p00;

assign mul_i_mid1_fu_962_p00 = grp_fu_1369_p2;

assign mul_i_mid1_fu_962_p1 = CHout_cast_reg_1612;

assign mul_ln49_1_fu_1189_p1 = rhs_2_reg_1602;

assign mul_ln49_2_fu_1069_p0 = mul_ln49_2_fu_1069_p00;

assign mul_ln49_2_fu_1069_p00 = select_ln49_2_fu_1057_p3;

assign mul_ln49_2_fu_1069_p1 = Kx_cast7_reg_1607;

assign or_ln45_fu_887_p2 = (select_ln1057_5_fu_880_p3 | icmp_ln1057_2_fu_819_p2);

assign or_ln56_fu_1100_p2 = (w_V_fu_1091_p2 | select_ln49_1_fu_1041_p3);

assign or_ln73_fu_1314_p2 = (icmp_ln73_fu_1302_p2 | icmp_ln73_1_fu_1308_p2);

assign p_cast18_fu_772_p1 = tmp_3_fu_764_p3;

assign p_cast18_mid1_fu_838_p1 = p_mid_fu_830_p3;

assign p_cast_fu_781_p4 = {{empty_fu_776_p2[63:2]}};

assign p_cast_mid1_fu_847_p4 = {{p_mid130_fu_842_p2[63:2]}};

assign p_mid130_fu_842_p2 = (p_cast18_mid1_fu_838_p1 + bias_read_reg_1447);

assign p_mid_fu_830_p3 = {{add_ln43_fu_824_p2}, {2'd0}};

assign pad_x_V_1_fu_528_p3 = ((mode[0:0] == 1'b1) ? pad_x_V_fu_462_p3 : 8'd0);

assign pad_x_V_fu_462_p3 = ((tmp_4_fu_422_p3[0:0] == 1'b1) ? sub_ln1543_1_fu_446_p2 : trunc_ln1543_2_fu_452_p4);

assign pad_y_V_1_fu_536_p3 = ((mode[0:0] == 1'b1) ? pad_y_V_fu_520_p3 : 8'd0);

assign pad_y_V_fu_520_p3 = ((tmp_5_fu_480_p3[0:0] == 1'b1) ? sub_ln1543_3_fu_504_p2 : trunc_ln1543_5_fu_510_p4);

assign rhs_2_fu_704_p1 = Win_read_reg_1496;

assign rhs_8_fu_689_p1 = Sy_read_reg_1468;

assign select_ln1057_1_fu_924_p3 = ((icmp_ln1057_2_reg_1677[0:0] == 1'b1) ? add_ln43_reg_1686 : cout_fu_200);

assign select_ln1057_2_cast_fu_932_p1 = select_ln1057_1_fu_924_p3;

assign select_ln1057_2_fu_857_p3 = ((icmp_ln1057_2_fu_819_p2[0:0] == 1'b1) ? p_cast_mid1_fu_847_p4 : p_cast_fu_781_p4);

assign select_ln1057_3_fu_936_p3 = ((icmp_ln1057_2_reg_1677[0:0] == 1'b1) ? 16'd0 : grp_fu_1358_p2);

assign select_ln1057_4_fu_942_p3 = ((icmp_ln1057_2_reg_1677[0:0] == 1'b1) ? zext_ln1057_1_fu_929_p1 : add_ln573_reg_1664);

assign select_ln1057_5_fu_880_p3 = ((icmp_ln1057_2_fu_819_p2[0:0] == 1'b1) ? icmp_ln1057_reg_1648 : icmp_ln1057_3_fu_875_p2);

assign select_ln1057_6_fu_917_p3 = ((select_ln1057_5_reg_1698[0:0] == 1'b1) ? i_4_fu_907_p2 : select_ln1057_fu_901_p3);

assign select_ln1057_7_fu_1151_p3 = ((icmp_ln1057_2_reg_1677[0:0] == 1'b1) ? 32'd1 : add_ln1057_fu_1145_p2);

assign select_ln1057_fu_901_p2 = i_fu_192;

assign select_ln1057_fu_901_p3 = ((icmp_ln1057_2_reg_1677[0:0] == 1'b1) ? 16'd0 : select_ln1057_fu_901_p2);

assign select_ln45_1_fu_948_p3 = ((select_ln1057_5_reg_1698[0:0] == 1'b1) ? grp_fu_1363_p2 : select_ln1057_3_fu_936_p3);

assign select_ln45_2_fu_973_p3 = ((select_ln1057_5_reg_1698[0:0] == 1'b1) ? add_ln573_2_fu_967_p2 : select_ln1057_4_fu_942_p3);

assign select_ln45_fu_893_p3 = ((or_ln45_fu_887_p2[0:0] == 1'b1) ? 16'd0 : lhs_V_1_fu_188);

assign select_ln49_1_fu_1041_p3 = ((icmp_ln1057_6_fu_1013_p2[0:0] == 1'b1) ? h_V_mid1_fu_1036_p2 : h_V_fu_988_p2);

assign select_ln49_2_fu_1057_p3 = ((icmp_ln1057_6_fu_1013_p2[0:0] == 1'b1) ? add_ln50_fu_1026_p2 : ii_reg_335);

assign select_ln49_3_fu_1079_p3 = ((icmp_ln1057_6_fu_1013_p2[0:0] == 1'b1) ? icmp_ln56_1_fu_1074_p2 : icmp_ln56_fu_997_p2);

assign select_ln49_fu_1018_p3 = ((icmp_ln1057_6_fu_1013_p2[0:0] == 1'b1) ? 8'd0 : jj_1_reg_346);

assign select_ln76_fu_1331_p3 = ((and_ln73_fu_1326_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln73_fu_1285_p1);

assign sext_ln1057_fu_865_p1 = $signed(select_ln1057_2_fu_857_p3);

assign sext_ln225_1_fu_1096_p1 = w_V_fu_1091_p2;

assign sext_ln225_3_fu_1201_p1 = $signed(shl_ln2_fu_1194_p3);

assign sext_ln76_fu_1275_p1 = $signed(trunc_ln3_fu_1265_p4);

assign shl_ln1543_1_fu_590_p3 = {{pad_y_V_1_fu_536_p3}, {1'd0}};

assign shl_ln1_fu_1249_p3 = {{grp_fu_1381_p3}, {2'd0}};

assign shl_ln2_fu_1194_p3 = {{grp_fu_1393_p3}, {2'd0}};

assign shl_ln_fu_544_p3 = {{pad_x_V_1_fu_528_p3}, {1'd0}};

assign sub_ln1543_1_fu_446_p2 = (8'd0 - trunc_ln1543_1_fu_436_p4);

assign sub_ln1543_2_fu_488_p2 = (9'd1 - zext_ln1543_1_fu_470_p1);

assign sub_ln1543_3_fu_504_p2 = (8'd0 - trunc_ln1543_4_fu_494_p4);

assign sub_ln1543_fu_430_p2 = (9'd1 - zext_ln1543_fu_412_p1);

assign sub_ln45_fu_954_p2 = (select_ln45_1_fu_948_p3 - conv_i9_i381_reg_1580);

assign tmp9_fu_1235_p0 = tmp9_fu_1235_p00;

assign tmp9_fu_1235_p00 = tmp_fu_1226_p2;

assign tmp9_fu_1235_p1 = CHout_cast_reg_1612;

assign tmp_1_fu_1288_p4 = {{bitcast_ln73_fu_1285_p1[30:23]}};

assign tmp_3_fu_764_p3 = {{cout_fu_200}, {2'd0}};

assign tmp_4_fu_422_p3 = add_ln1543_fu_416_p2[32'd8];

assign tmp_5_fu_480_p3 = add_ln1543_1_fu_474_p2[32'd8];

assign tmp_6_fu_1106_p3 = or_ln56_fu_1100_p2[32'd15];

assign tmp_fu_1226_p2 = (mul_ln49_3_reg_1812 + zext_ln49_fu_1213_p1);

assign trunc_ln1543_1_fu_436_p4 = {{sub_ln1543_fu_430_p2[8:1]}};

assign trunc_ln1543_2_fu_452_p4 = {{add_ln1543_fu_416_p2[8:1]}};

assign trunc_ln1543_4_fu_494_p4 = {{sub_ln1543_2_fu_488_p2[8:1]}};

assign trunc_ln1543_5_fu_510_p4 = {{add_ln1543_1_fu_474_p2[8:1]}};

assign trunc_ln223_1_fu_671_p1 = grp_fu_630_p2[15:0];

assign trunc_ln223_fu_661_p1 = grp_fu_584_p2[15:0];

assign trunc_ln3_fu_1265_p4 = {{add_ln76_fu_1260_p2[63:2]}};

assign trunc_ln73_fu_1298_p1 = bitcast_ln73_fu_1285_p1[22:0];

assign w_V_fu_1091_p2 = ($signed(sub_ln1525_reg_1727) + $signed(zext_ln225_fu_1087_p1));

assign xor_ln56_fu_1114_p2 = (tmp_6_fu_1106_p3 ^ 1'd1);

assign zext_ln1057_1_fu_929_p1 = add_ln43_reg_1686;

assign zext_ln1057_fu_760_p1 = cout_fu_200;

assign zext_ln1525_1_fu_698_p1 = pad_x_V_1_reg_1515;

assign zext_ln1525_fu_695_p1 = Sx_read_reg_1473;

assign zext_ln1543_10_fu_616_p1 = Ky;

assign zext_ln1543_1_fu_470_p1 = Ky;

assign zext_ln1543_2_fu_552_p1 = shl_ln_fu_544_p3;

assign zext_ln1543_3_fu_556_p1 = Win;

assign zext_ln1543_4_fu_566_p1 = add_ln1543_2_fu_560_p2;

assign zext_ln1543_5_fu_570_p1 = Kx;

assign zext_ln1543_7_fu_598_p1 = shl_ln1543_1_fu_590_p3;

assign zext_ln1543_8_fu_602_p1 = Hin;

assign zext_ln1543_9_fu_612_p1 = add_ln1543_3_fu_606_p2;

assign zext_ln1543_fu_412_p1 = Kx;

assign zext_ln225_fu_1087_p1 = select_ln49_fu_1018_p3;

assign zext_ln49_fu_1213_p1 = grp_fu_1401_p2;

assign zext_ln76_1_fu_1256_p1 = shl_ln1_fu_1249_p3;

always @ (posedge ap_clk) begin
    zext_ln1543_3_reg_1525[16] <= 1'b0;
    zext_ln1543_8_reg_1540[16] <= 1'b0;
    Wout_V_cast_reg_1562[31:16] <= 16'b0000000000000000;
    rhs_8_reg_1574[15:8] <= 8'b00000000;
    conv_i9_i381_reg_1580[15:8] <= 8'b00000000;
    zext_ln1525_reg_1585[15:8] <= 8'b00000000;
    zext_ln1525_1_reg_1590[15:8] <= 8'b00000000;
    conv_i_i282_reg_1595[31:16] <= 16'b0000000000000000;
    rhs_2_reg_1602[47:16] <= 32'b00000000000000000000000000000000;
    Kx_cast7_reg_1607[15:8] <= 8'b00000000;
    CHout_cast_reg_1612[47:16] <= 32'b00000000000000000000000000000000;
    CHin_cast10_reg_1619[23:16] <= 8'b00000000;
    CHout_cast6_reg_1624[31:16] <= 16'b0000000000000000;
end

endmodule //Conv
